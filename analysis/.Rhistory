require(ggpubr)
require(ggplot2)
require(RColorBrewer)
knitr::opts_chunk$set(message = FALSE)
# Import the text file of nodule data
data_HostMutants2021_nod_counts <- read.table("../data/data_HostMutants2021_nod_counts.txt",sep = "\t",header=TRUE)
# Import the genotype information data
genotype_name <- read.table("../data/genotype_name.txt",sep = "\t",header=TRUE)
#removing rows marked "853","838","888","889","890"
genotype_name<-subset(genotype_name,genotype_id!="853")
genotype_name<-subset(genotype_name,genotype_id!="838")
genotype_name<-subset(genotype_name,genotype_id!="888")
genotype_name<-subset(genotype_name,genotype_id!="889")
genotype_name<-subset(genotype_name,genotype_id!="890")
#import the text file with the CFU and nodule count data
data_nsfpgrp_hostmutants_C86meliloti <- read.table("../data/data_nsfpgrp_hostmutants_C86meliloti.txt",sep = "\t",header=TRUE)
# Merge all three datasets sequentially
all.data <-full_join (data_HostMutants2021_nod_counts,data_nsfpgrp_hostmutants_C86meliloti,by=c("sample_id","genotype_id","rep"))
all.data <-full_join (all.data,genotype_name,by = "genotype_id")
###### Data set clean-up ######
# Choose only columns to keep that are meaningful for our analysis
all.data<-subset (all.data,select=c(sample_id,genotype_id,name,type,rep,background,date_biomass_harvested,num_plants,percent_herbivory,flowering,above_biomass_g,below_biomass_g,Count,num_plants_picked_nods,total_area,average_size,cfu_ml))
# Calculate additional measurements
# Simplified code by combining all of them here and subbed in your new names
all.data<-all.data%>% mutate(
above_biomass_per_plant=above_biomass_g/num_plants,
below_biomass_per_plant=below_biomass_g/num_plants,
root_to_shoot_ratio=below_biomass_per_plant/above_biomass_per_plant,
total_biomass_per_plant=above_biomass_per_plant+below_biomass_per_plant,
nodule_number_per_plant=Count/num_plants_picked_nods,
cfu_per_plant_LOG10=log10(cfu_ml/num_plants_picked_nods),
cfu_per_nodule_LOG10=log10(cfu_ml/Count),
total_nodulated_area_per_plant=total_area/num_plants_picked_nods,
average_area_per_nodule=total_nodulated_area_per_plant/nodule_number_per_plant)
#replacing  'NAN' and 'Inf' with 'NA'
all.data[is.na(all.data) | all.data == "Inf"] <- NA
all.data[is.na(all.data) | all.data == "NaN"] <- NA
write.table (all.data,file="../data/Traits_MedicagoMutants.txt",sep = "\t",row.names = FALSE)
# Import the data
Traits_MedicagoMutants<- read.table("../data/Traits_MedicagoMutants.txt",sep = "\t",header=TRUE)
#convert the genotype_id into integer
Traits_MedicagoMutants$genotype_id = as.integer(Traits_MedicagoMutants$genotype_id)
#Select for only the A17 background
all.data.A17 <- Traits_MedicagoMutants %>% filter(background=="A17")
### Make sure factors are in the right order for analysis
#Turning all.data.A17$name  into a factor.
all.data.A17$name<-factor(all.data.A17$name)
#Turning all.data.A17$Type into a factor.
all.data.A17$type<-factor(all.data.A17$type, levels = c("WT","Early","Late","AON"))
#Changing the order of the genotypes
all.data.A17$name<-factor(all.data.A17$name,levels=c("A17", "dmi1-2","dmi2-3","dmi3-1","hcl","ipd3","latd", "nad1", "dnf1", "dnf2","dnf3", "dnf4","dnf6","dnf7", "dnf1/dnf2", "dnf5/dnf2", "rdn1", "sunn1","sunn4"))
extract.coefs<-function(trait, predictor="name", p.threshold=0.05) {
# Step1: Remove rows with NA for the focal trait
my.data<-all.data.A17[!is.na(all.data.A17[,trait]),]
# Step2: Run a lm model with genotypes and replicate as predictors
if(predictor=="name")  {
my.model <- lm(my.data[,trait] ~ name + rep, data = my.data)
}
if(predictor=="type")  {
my.model<- lm(my.data[,trait] ~ type + rep, data = my.data)
}
# Step 3 Extract coeffecient dataframe and add column for row.names
my.coefs <- as.data.frame(summary(my.model)$coefficients) # covert to data fram
my.coefs <- data.frame (Trait=paste(trait),Predictor=row.names(my.coefs), my.coefs) # add the row names as column
colnames(my.coefs) <-c("Trait","Predictor","Coef", "St.error","t.value","P.value")# Create more meaningful column names
# Step 4 Remove none genotype predictors
my.coefs <-my.coefs[!my.coefs$Predictor %in% c("(Intercept)","repB","repC","repD","repE","repF"),]
# Step 5: classify coeffecients
my.coefs$Class<-"None" #Set up dummy column to hold classifications
# Step 6 Modify catagorizations based on coef and pvalue.
try(my.coefs[(my.coefs$Coef > 0 & my.coefs$P.value< p.threshold),]$Class<-"Up")
try(my.coefs[(my.coefs$Coef < 0 & my.coefs$P.value< p.threshold),]$Class<-"Down")
return(my.coefs)
}
Geno.Coef.Summary<-rbind(extract.coefs("nodule_number_per_plant"),extract.coefs("average_area_per_nodule"),extract.coefs("total_nodulated_area_per_plant"),extract.coefs("total_biomass_per_plant"),extract.coefs("root_to_shoot_ratio"),extract.coefs("cfu_per_nodule_LOG10"),extract.coefs("cfu_per_plant_LOG10"))
write.table (Geno.Coef.Summary,file="../tables/Geno.Coef.Summary.txt",sep = "\t",row.names = FALSE)
Type.Coef.Summary<-rbind(extract.coefs("nodule_number_per_plant",predictor="type"),extract.coefs("average_area_per_nodule",predictor="type"),extract.coefs("total_nodulated_area_per_plant",predictor="type"),extract.coefs("total_biomass_per_plant",predictor="type"),extract.coefs("root_to_shoot_ratio",predictor="type"),extract.coefs("cfu_per_nodule_LOG10",predictor="type"),extract.coefs("cfu_per_plant_LOG10",predictor="type"))
write.table (Type.Coef.Summary,file="../tables/Type.Coef.Summary.txt",sep = "\t",row.names = FALSE)
extract.anova<- function(trait) {
#Dropping rows with NA
#all.data.A17 <- all.data.A17 [complete.cases(all.data.A17), ] # This needs to be made specific to the trait! See below
all.data.A17<-all.data.A17[!is.na(all.data.A17[,trait]),]
# Run a model with name and replicate as predictors
NodNum.G <- lm(all.data.A17[,trait] ~ name + rep, data = all.data.A17)
# Run a model with type and replicate as predictors (why the ,?)
NodNum.T<-lm(all.data.A17[,trait] ~ type + rep, data = all.data.A17)
#Examine the Analysis of Variance tables and save output
a.G<-anova(NodNum.G)
a.T<-anova(NodNum.T)
#Compile results into a dataframe
myresults<-data.frame(Response=c(paste(trait)),Predictor=c("Genotype","Replicate","Residual","Type","Replicate","Residual"),Sum.Sq=c(a.G$"Sum Sq",a.T$"Sum Sq"),PctExp=c(a.G$"Sum Sq"/sum(a.G$"Sum Sq")*100,a.T$"Sum Sq"/sum(a.T$"Sum Sq")*100),Df=c(a.G$"Df",a.T$"Df"),Fval=c(a.G$"F value",a.T$"F value"), Pval=c(a.G$"Pr(>F)",a.T$"Pr(>F)"),R.adj=c(summary(NodNum.G)$adj.r.squared,"NA","NA",summary(NodNum.T)$adj.r.squared,"NA","NA"))
return(myresults)
}
#Compile Anovas results across Phenotypes
ANOVA.Trait.Summary<-rbind(extract.anova("nodule_number_per_plant"),extract.anova("average_area_per_nodule"),extract.anova("total_nodulated_area_per_plant"),extract.anova("total_biomass_per_plant"),extract.anova("root_to_shoot_ratio"),extract.anova("cfu_per_nodule_LOG10"),extract.anova("cfu_per_plant_LOG10"))
write.table (ANOVA.Trait.Summary,file="../tables/ANOVA-Trait-Summary.txt",sep = "\t",row.names = FALSE)
Geno.Coef.Summary$Class<-factor(Geno.Coef.Summary$Class,levels=c("Up","None","Down"))
Geno.Coef.Summary$Trait<-factor(Geno.Coef.Summary$Trait,levels=c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10"))
### First pass graph
Coef.Prop.Figure<-ggplot(data = Geno.Coef.Summary) +
geom_bar(mapping = aes(x = Trait, fill = Class), position = "fill")+
theme_bw()+
coord_flip()+
scale_fill_manual(values=c("darkblue","darkgrey","darkred"))+xlab ("")+ylab("Proportion of Genotypes")
pdf(file = "../figures/Figure2_ProportionCoef.pdf",width = 6, height = 6)
Coef.Prop.Figure
dev.off()
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442")
trait.boxplot<-function(trait,mypal=cbPalette,log=FALSE) {
all.data.A17$name<-factor(all.data.A17$name,levels = rev(levels(all.data.A17$name))) # reorder factors
mydata<-data.frame(name=all.data.A17$name, type=all.data.A17$type, mytrait=all.data.A17[,trait]) # create sub dataframe with only focal trait to make plotting easier
ggplot(mydata,aes(x=name,y=mytrait,fill=type))+
geom_boxplot(outlier.shape=NA,na.rm = TRUE,coef=0) +
geom_jitter() +
coord_flip() +
scale_color_manual(values=mypal)  +
labs(x="Plant Host",y=c(paste(trait))) +
theme_classic() +
theme(legend.position="top", text = element_text(size=18))
}
pdf(file = "../figures/boxplots_allsymbiotictraits.pdf",width = 6, height = 6)
trait.boxplot(trait = "nodule_number_per_plant")
trait.boxplot(trait = "total_nodulated_area_per_plant")
trait.boxplot(trait = "average_area_per_nodule")
trait.boxplot(trait = "root_to_shoot_ratio")
trait.boxplot(trait = "total_biomass_per_plant")
trait.boxplot(trait = "cfu_per_nodule_LOG10")
trait.boxplot(trait = "cfu_per_plant_LOG10")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
#Load packages needed. Tidyverse include dplyer
require(tidyverse)
require(ggpubr)
require(ggplot2)
require(RColorBrewer)
knitr::opts_chunk$set(message = FALSE)
# Import the text file of nodule data
data_HostMutants2021_nod_counts <- read.table("../data/data_HostMutants2021_nod_counts.txt",sep = "\t",header=TRUE)
# Import the genotype information data
genotype_name <- read.table("../data/genotype_name.txt",sep = "\t",header=TRUE)
#removing rows marked "853","838","888","889","890"
genotype_name<-subset(genotype_name,genotype_id!="853")
genotype_name<-subset(genotype_name,genotype_id!="838")
genotype_name<-subset(genotype_name,genotype_id!="888")
genotype_name<-subset(genotype_name,genotype_id!="889")
genotype_name<-subset(genotype_name,genotype_id!="890")
#import the text file with the CFU and nodule count data
data_nsfpgrp_hostmutants_C86meliloti <- read.table("../data/data_nsfpgrp_hostmutants_C86meliloti.txt",sep = "\t",header=TRUE)
# Merge all three datasets sequentially
all.data <-full_join (data_HostMutants2021_nod_counts,data_nsfpgrp_hostmutants_C86meliloti,by=c("sample_id","genotype_id","rep"))
all.data <-full_join (all.data,genotype_name,by = "genotype_id")
###### Data set clean-up ######
# Choose only columns to keep that are meaningful for our analysis
all.data<-subset (all.data,select=c(sample_id,genotype_id,name,type,rep,background,date_biomass_harvested,num_plants,percent_herbivory,flowering,above_biomass_g,below_biomass_g,Count,num_plants_picked_nods,total_area,average_size,cfu_ml))
# Calculate additional measurements
# Simplified code by combining all of them here and subbed in your new names
all.data<-all.data%>% mutate(
above_biomass_per_plant=above_biomass_g/num_plants,
below_biomass_per_plant=below_biomass_g/num_plants,
root_to_shoot_ratio=below_biomass_per_plant/above_biomass_per_plant,
total_biomass_per_plant=above_biomass_per_plant+below_biomass_per_plant,
nodule_number_per_plant=Count/num_plants_picked_nods,
cfu_per_plant_LOG10=log10(cfu_ml/num_plants_picked_nods),
cfu_per_nodule_LOG10=log10(cfu_ml/Count),
total_nodulated_area_per_plant=total_area/num_plants_picked_nods,
average_area_per_nodule=total_nodulated_area_per_plant/nodule_number_per_plant)
#replacing  'NAN' and 'Inf' with 'NA'
all.data[is.na(all.data) | all.data == "Inf"] <- NA
all.data[is.na(all.data) | all.data == "NaN"] <- NA
write.table (all.data,file="../data/Traits_MedicagoMutants.txt",sep = "\t",row.names = FALSE)
# Import the data
Traits_MedicagoMutants<- read.table("../data/Traits_MedicagoMutants.txt",sep = "\t",header=TRUE)
#convert the genotype_id into integer
Traits_MedicagoMutants$genotype_id = as.integer(Traits_MedicagoMutants$genotype_id)
#Select for only the A17 background
all.data.A17 <- Traits_MedicagoMutants %>% filter(background=="A17")
### Make sure factors are in the right order for analysis
#Turning all.data.A17$name  into a factor.
all.data.A17$name<-factor(all.data.A17$name)
#Turning all.data.A17$Type into a factor.
all.data.A17$type<-factor(all.data.A17$type, levels = c("WT","Early","Late","AON"))
#Changing the order of the genotypes
all.data.A17$name<-factor(all.data.A17$name,levels=c("A17", "dmi1-2","dmi2-3","dmi3-1","hcl","ipd3","latd", "nad1", "dnf1", "dnf2","dnf3", "dnf4","dnf6","dnf7", "dnf1/dnf2", "dnf5/dnf2", "rdn1", "sunn1","sunn4"))
# Import the data
Traits_MedicagoMutants<- read.table("../data/Traits_MedicagoMutants.txt",sep = "\t",header=TRUE)
#convert the genotype_id into integer
Traits_MedicagoMutants$genotype_id = as.integer(Traits_MedicagoMutants$genotype_id)
#Select for only the A17 background
all.data.A17 <- Traits_MedicagoMutants %>% filter(background=="A17")
### Make sure factors are in the right order for analysis
#Turning all.data.A17$name  into a factor.
all.data.A17$name<-factor(all.data.A17$name)
#Turning all.data.A17$Type into a factor.
all.data.A17$type<-factor(all.data.A17$type, levels = c("WT","Early","Late","AON"))
#Changing the order of the genotypes
all.data.A17$name<-factor(all.data.A17$name,levels=c("A17", "dmi1-2","dmi2-3","dmi3-1","hcl","ipd3","latd", "nad1", "dnf1", "dnf2","dnf3", "dnf4","dnf6","dnf7", "dnf1/dnf2", "dnf5/dnf2", "rdn1", "sunn1","sunn4"))
extract.coefs<-function(trait, predictor="name", p.threshold=0.05) {
# Step1: Remove rows with NA for the focal trait
my.data<-all.data.A17[!is.na(all.data.A17[,trait]),]
# Step2: Run a lm model with genotypes and replicate as predictors
if(predictor=="name")  {
my.model <- lm(my.data[,trait] ~ name + rep, data = my.data)
}
if(predictor=="type")  {
my.model<- lm(my.data[,trait] ~ type + rep, data = my.data)
}
# Step 3 Extract coeffecient dataframe and add column for row.names
my.coefs <- as.data.frame(summary(my.model)$coefficients) # covert to data fram
my.coefs <- data.frame (Trait=paste(trait),Predictor=row.names(my.coefs), my.coefs) # add the row names as column
colnames(my.coefs) <-c("Trait","Predictor","Coef", "St.error","t.value","P.value")# Create more meaningful column names
# Step 4 Remove none genotype predictors
my.coefs <-my.coefs[!my.coefs$Predictor %in% c("(Intercept)","repB","repC","repD","repE","repF"),]
# Step 5: classify coeffecients
my.coefs$Class<-"None" #Set up dummy column to hold classifications
# Step 6 Modify catagorizations based on coef and pvalue.
try(my.coefs[(my.coefs$Coef > 0 & my.coefs$P.value< p.threshold),]$Class<-"Up")
try(my.coefs[(my.coefs$Coef < 0 & my.coefs$P.value< p.threshold),]$Class<-"Down")
return(my.coefs)
}
Geno.Coef.Summary<-rbind(extract.coefs("nodule_number_per_plant"),extract.coefs("average_area_per_nodule"),extract.coefs("total_nodulated_area_per_plant"),extract.coefs("total_biomass_per_plant"),extract.coefs("root_to_shoot_ratio"),extract.coefs("cfu_per_nodule_LOG10"),extract.coefs("cfu_per_plant_LOG10"))
write.table (Geno.Coef.Summary,file="../tables/Geno.Coef.Summary.txt",sep = "\t",row.names = FALSE)
Type.Coef.Summary<-rbind(extract.coefs("nodule_number_per_plant",predictor="type"),extract.coefs("average_area_per_nodule",predictor="type"),extract.coefs("total_nodulated_area_per_plant",predictor="type"),extract.coefs("total_biomass_per_plant",predictor="type"),extract.coefs("root_to_shoot_ratio",predictor="type"),extract.coefs("cfu_per_nodule_LOG10",predictor="type"),extract.coefs("cfu_per_plant_LOG10",predictor="type"))
write.table (Type.Coef.Summary,file="../tables/Type.Coef.Summary.txt",sep = "\t",row.names = FALSE)
extract.anova<- function(trait) {
#Dropping rows with NA
#all.data.A17 <- all.data.A17 [complete.cases(all.data.A17), ] # This needs to be made specific to the trait! See below
all.data.A17<-all.data.A17[!is.na(all.data.A17[,trait]),]
# Run a model with name and replicate as predictors
NodNum.G <- lm(all.data.A17[,trait] ~ name + rep, data = all.data.A17)
# Run a model with type and replicate as predictors (why the ,?)
NodNum.T<-lm(all.data.A17[,trait] ~ type + rep, data = all.data.A17)
#Examine the Analysis of Variance tables and save output
a.G<-anova(NodNum.G)
a.T<-anova(NodNum.T)
#Compile results into a dataframe
myresults<-data.frame(Response=c(paste(trait)),Predictor=c("Genotype","Replicate","Residual","Type","Replicate","Residual"),Sum.Sq=c(a.G$"Sum Sq",a.T$"Sum Sq"),PctExp=c(a.G$"Sum Sq"/sum(a.G$"Sum Sq")*100,a.T$"Sum Sq"/sum(a.T$"Sum Sq")*100),Df=c(a.G$"Df",a.T$"Df"),Fval=c(a.G$"F value",a.T$"F value"), Pval=c(a.G$"Pr(>F)",a.T$"Pr(>F)"),R.adj=c(summary(NodNum.G)$adj.r.squared,"NA","NA",summary(NodNum.T)$adj.r.squared,"NA","NA"))
return(myresults)
}
#Compile Anovas results across Phenotypes
ANOVA.Trait.Summary<-rbind(extract.anova("nodule_number_per_plant"),extract.anova("average_area_per_nodule"),extract.anova("total_nodulated_area_per_plant"),extract.anova("total_biomass_per_plant"),extract.anova("root_to_shoot_ratio"),extract.anova("cfu_per_nodule_LOG10"),extract.anova("cfu_per_plant_LOG10"))
write.table (ANOVA.Trait.Summary,file="../tables/ANOVA-Trait-Summary.txt",sep = "\t",row.names = FALSE)
Geno.Coef.Summary$Class<-factor(Geno.Coef.Summary$Class,levels=c("Up","None","Down"))
Geno.Coef.Summary$Trait<-factor(Geno.Coef.Summary$Trait,levels=c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10"))
### First pass graph
Coef.Prop.Figure<-ggplot(data = Geno.Coef.Summary) +
geom_bar(mapping = aes(x = Trait, fill = Class), position = "fill")+
theme_bw()+
coord_flip()+
scale_fill_manual(values=c("darkblue","darkgrey","darkred"))+xlab ("")+ylab("Proportion of Genotypes")
pdf(file = "../figures/Figure2_ProportionCoef.pdf",width = 6, height = 6)
Coef.Prop.Figure
dev.off()
#Should this line be added to the code?
ggplot_build(Coef.Prop.Figure)
extract.anova<- function(trait) {
#Dropping rows with NA
#all.data.A17 <- all.data.A17 [complete.cases(all.data.A17), ] # This needs to be made specific to the trait! See below
all.data.A17<-all.data.A17[!is.na(all.data.A17[,trait]),]
# Run a model with name and replicate as predictors
NodNum.G <- lm(all.data.A17[,trait] ~ name + rep, data = all.data.A17)
# Run a model with type and replicate as predictors (why the ,?)
NodNum.T<-lm(all.data.A17[,trait] ~ type + rep, data = all.data.A17)
#Examine the Analysis of Variance tables and save output
a.G<-anova(NodNum.G)
a.T<-anova(NodNum.T)
#Compile results into a dataframe
myresults<-data.frame(Response=c(paste(trait)),Predictor=c("Genotype","Replicate","Residual","Type","Replicate","Residual"),Sum.Sq=c(a.G$"Sum Sq",a.T$"Sum Sq"),PctExp=c(a.G$"Sum Sq"/sum(a.G$"Sum Sq")*100,a.T$"Sum Sq"/sum(a.T$"Sum Sq")*100),Df=c(a.G$"Df",a.T$"Df"),Fval=c(a.G$"F value",a.T$"F value"), Pval=c(a.G$"Pr(>F)",a.T$"Pr(>F)"),R.adj=c(summary(NodNum.G)$adj.r.squared,"NA","NA",summary(NodNum.T)$adj.r.squared,"NA","NA"))
return(myresults)
}
#Compile Anovas results across Phenotypes
ANOVA.Trait.Summary<-rbind(extract.anova("nodule_number_per_plant"),extract.anova("average_area_per_nodule"),extract.anova("total_nodulated_area_per_plant"),extract.anova("total_biomass_per_plant"),extract.anova("root_to_shoot_ratio"),extract.anova("cfu_per_nodule_LOG10"),extract.anova("cfu_per_plant_LOG10"))
write.table (ANOVA.Trait.Summary,file="../tables/ANOVA-Trait-Summary.txt",sep = "\t",row.names = FALSE)
Geno.Coef.Summary$Class<-factor(Geno.Coef.Summary$Class,levels=c("Up","None","Down"))
Geno.Coef.Summary$Trait<-factor(Geno.Coef.Summary$Trait,levels=c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10"))
### First pass graph
Coef.Prop.Figure<-ggplot(data = Geno.Coef.Summary) +
geom_bar(mapping = aes(x = Trait, fill = Class), position = "fill")+
theme_bw()+
coord_flip()+
scale_fill_manual(values=c("darkblue","darkgrey","darkred"))+xlab ("")+ylab("Proportion of Genotypes")
pdf(file = "../figures/Figure2_ProportionCoef.pdf",width = 6, height = 6)
Coef.Prop.Figure
dev.off()
#Should this line be added to the code?
ggplot_build(Coef.Prop.Figure)
df <- Coef.Prop.Figure$data[[1]]
df
Geno.Coef.Summary$Class<-factor(Geno.Coef.Summary$Class,levels=c("Up","None","Down"))
Geno.Coef.Summary$Trait<-factor(Geno.Coef.Summary$Trait,levels=c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10"))
### First pass graph
Coef.Prop.Figure<-ggplot(data = Geno.Coef.Summary) +
geom_bar(mapping = aes(x = Trait, fill = Class), position = "fill")+
theme_bw()+
coord_flip()+
scale_fill_manual(values=c("darkblue","darkgrey","darkred"))+xlab ("")+ylab("Proportion of Genotypes")
pdf(file = "../figures/Figure2_ProportionCoef.pdf",width = 6, height = 6)
Coef.Prop.Figure
dev.off()
#Should this line be added to the code?
p<-ggplot_build(Coef.Prop.Figure)
p
p
View(Coef.Prop.Figure)
#first pass at the up and down heat map
#libraries needed
library(hrbrthemes)
#first pass at the up and down heat map
#libraries needed
library(viridis)
install.packages(hrbrthemes)
library(viridisLite, lib.loc = "/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
install.packages(viridis)
#first pass at the up and down heat map
#libraries needed
library(d3heatmap)
install.packages("d3heatmap_0.6.1.2.tar.gz",repos=NULL,type="source")
install.packages("heatmaply")
install.packages("heatmaply")
library(heatmaply)
library(plotly)
heatmap(Geno.Coef.Summary)
Geno.Coef.Summary<as.matrix(Geno.Coef.Summary)
heatmap(Geno.Coef.Summary)
heatmap(Geno.Coef.Summary$Coef)
Geno.Coef.Summary
data<-as.matrix (Geno.Coef.Summary)
heatmap(data)
heatmap(data$Coef)
heatmap(Geno.Coef.Summary$Coef)
heatmap(as.matrix(Geno.Coef.Summary[, -3]))
heatmap(as.matrix(Geno.Coef.Summary[, 3]))
heatmap(as.matrix(Geno.Coef.Summary[, 2,3]))
nba <- read.csv("../tables/Type.Coef.Summary.txt)
)
""
nba <- read.csv("../tables/Type.Coef.Summary.txt)
nba <- read.csv("../tables/Type.Coef.Summary.txt")
nba
nba$Trait
nba <- read.csv("../tables/Geno.Coef.Summary.txt")
nba
nba <- read.csv("../tables/Geno.Coef.Summary.csv")
nba<read.txt
Geno.Coef.Summary
p<-Geno.Coef.Summary
p
row.names(p)<-p$Trait
row.names(p)<-p$Predictor
p
row.names(p)<-p$Predictor
p<-as.matrix(p)
rownames(p) <p$Predictor
rownames(p) <-p$Predictor
p
rownames(p) <p$Coef
Geno.Coef.Summary
p<-Geno.Coef.Summary
p
p<-p[,123]
p<-p[,2,3]
p<-data.matrix(p)
p_heatmap<-heatmap(p, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10)))
p_heatmap<-heatmap(p, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
p_heatmap<-heatmap(p, Rowv=NA, Colv=NA, col = cm.colors(256), margins=c(5,10))
p_heatmap<-heatmap(p, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
p_heatmap<-heatmap(as.matrix(p))
p_heatmap<-heatmap(as.matrix(p[,2,3]))
p_heatmap<-heatmap(as.matrix(p[,3]))
p_heatmap<-heatmap(as.matrix(p[,2,3]))
p
Geno.Coef.Summary
Geno.Coef.Summary[,2,3,4]
Geno.Coef.Summary[,2,3,]
Geno.Coef.Summary[],2,3]
Geno.Coef.Summary[,2,3]
Geno.Coef.Summary[,2:4]
Geno.Coef.Summary[2:4]
Geno.Coef.Summary[1:4]
Geno.Coef.Summary[1:3]
Geno.Coef.Summary[,1:3]
Geno.Coef.Summary[-,1:3]
Geno.Coef.Summary[-1:3]
Geno.Coef.Summary[-1]
Geno.Coef.Summary[,1:3]
df<-p[2:3]
df
df<-p[-2:-3]
df
p
p<-Geno.Coef.Summary
p
p[1]
p[-1]
p[-0]
p[,1]
p<-Geno.Coef.Summary
p[-1]
p_heatmap<-heatmap(Geno.Coef.Summary, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
p_heatmap<-heatmap(as.matrix(Geno.Coef.Summary(,-1), Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
)
row.names(Geno.Coef.Summary$Trait)
Geno.Coef.Summary[1]<-NULL
df<-Geno.Coef.Summary[2:4]
df
df<Geno.Coef.Summary$Predictor
Geno.Coef.Summary
p<-column_to rownames(Geno.Coef.Summary,"Trait")
p <-column_to rownames(Geno.Coef.Summary,"Trait")
p<-as.matrix(Geno.Coef.Summary)
p
p<-p[,2:3]
p
p<-p[,1:2]
p
p<-p[,2]
p
p<-p[,1:2]
p<-p[,1,2]
p<-p[,2]
p<-p[,2]
p
p<-Geno.Coef.Summary[,2,3]
p
p<-Geno.Coef.Summary[,1,2]
p
p<-Geno.Coef.Summary[,2,3,4]
p<-Geno.Coef.Summary[,-2,-3,-4]
p<-Geno.Coef.Summary[,-2,-3]
p
p<-Geno.Coef.Summary[,-2,3]
p
p<-Geno.Coef.Summary[,-1,3]
p
p<-Geno.Coef.Summary[,1]
p
p<-Geno.Coef.Summary[,-1]
p
p<-Geno.Coef.Summary[,1]
p
p<-Geno.Coef.Summary[,-1]
p
p<-Geno.Coef.Summary[,-1]
p
p
matrix(data,byrow,nrow,ncol,dimnames)
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl", "nameipd3","namelatd","namenad1","namednf1", "namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4","namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=8,ncol=3,dimnames=list(rnames,cnames))
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4"
)
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=8,ncol=3,dimnames=list(rnames,cnames))
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=8,ncol=15,dimnames=list(rnames,cnames))
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
matrix(data=Geno.Coef.Summary$Coef,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m<-matrix(data=Geno.Coef.Summary$Coef,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m
m_heatmap<-heatmap(m)
m_heatmap<-heatmap(m,Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
m_heatmap<-heatmap(m,Rowv=NA, Colv=NA, scale="column", margins=c(5,10))
m_heatmap<-heatmap(m)
m_heatmap<-heatmap(m,scale = "row")
m_heatmap
m_heatmap<-heatmap(m,Rowv=NA, Colv=NA, scale="row", margins=c(5,10))
knitr::opts_chunk$set(echo = TRUE)
#Load packages needed. Tidyverse include dplyer
require(tidyverse)
require(ggpubr)
require(ggplot2)
require(RColorBrewer)
knitr::opts_chunk$set(message = FALSE)
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=8,ncol=3,dimnames=list(rnames,cnames))
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m_heatmap<-heatmap(m)
m_heatmap
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,Colv = NA, Rowv = NA,nrow=7,ncol=15,dimnames=list(rnames,cnames))
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m_heatmap<-heatmap(m,Colv = NA, Rowv = NA,scale="row")
m_heatmap
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m_heatmap<-heatmap(m,Colv = NA, Rowv = NA,scale="colume")
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m_heatmap<-heatmap(m,Colv = NA, Rowv = NA,scale="columne")
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m_heatmap<-heatmap(m,Colv = NA, Rowv = NA,scale="row")
m_heatmap
#first pass at the up and down heat map
rnames<- c("nodule_number_per_plant","average_area_per_nodule","total_nodulated_area_per_plant","total_biomass_per_plant","root_to_shoot_ratio", "cfu_per_nodule_LOG10","cfu_per_plant_LOG10")
cnames<-c("namehcl","nameipd3","namelatd","namenad1","namednf1","namednf2","namednf3","namednf4","namednf6","namednf7","namednf1/dnf2","namednf5/dnf2","namerdn1","namesunn1","namesunn4")
matrix(data=Geno.Coef.Summary,byrow=TRUE,nrow=7,ncol=15,dimnames=list(rnames,cnames))
m_heatmap<-heatmap(m,Colv = NA, Rowv = NA)
m_heatmap
